version: 2
jobs:
  build-android:
    docker:
      - image: circleci/android:api-28-node
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: 
          name: "Install gradle"
          command: |
            wget https://services.gradle.org/distributions/gradle-4.0.2-bin.zip -P /tmp
            sudo unzip -d /opt/gradle /tmp/gradle-*.zip
            echo 'export GRADLE_HOME=/opt/gradle/gradle-4.0.2' >> $BASH_ENV
            echo 'export PATH=$PATH:/opt/gradle/gradle-4.0.2/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Install ionic and cordova"
          command: |
            sudo npm --force install -g ionic cordova yarn
      - run:
          name: "Install npm packages"
          command: |
            yarn install
      - run:
          name: "Install Cordova plugins and add android platform"
          command: |
            ionic cordova platform add android --noresources
            ionic config set -g telemetry true
      - run:
          name: "Generate apk"
          command: |
            ionic cordova build android --verbose
            mkdir -p /tmp/apk
            cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk
      - store_artifacts:
          path: /tmp/apk
          destination: apks

  test-ios:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/project
    environment:
      FL_OUTPUT_DIR: tmp/ipa
      FASTLANE_LANE: test
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: tmp/ipa
      - store_test_results:
          path: tmp/ipa/scan

  build-ios:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/project
    environment:
      FL_OUTPUT_DIR: tmp/ipa
      FASTLANE_LANE: adhoc
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: tmp/ipa/debug.ipa

  beta:
    macos:
      xcode: "10.2.0"
    working_directory: /Users/distiller/project
    environment:
      FL_OUTPUT_DIR: tmp/ipa
      FASTLANE_LANE: beta
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: bundle install
      - run:
          name: Fastlane
          command: bundle exec fastlane $FASTLANE_LANE
      - store_artifacts:
          path: tmp/ipa/debug.ipa

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-android
      - test-ios
      - build-ios:
          requires:
            - test-ios
      #- beta:
          #requires:
            #- test-ios